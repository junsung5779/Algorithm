# 테스트케이스 횟수를 입력받는다.
T = int(input())
# 테스트케이스 횟수를 반복하면서
for tc in range(1, T+1):
    # 정사각형 배열의 한쪽 길이를 입력받는다.
    N = int(input())
    # 정사각형 배열의 사이즈를 저장한다.
    size = N * N
    # N*N크기의 배열에 0으로 리스트를 저장한다.
    arr = [[0]*N for _ in range(N)]
    # 하,우,상,좌
    dx = [1,0,-1,0]
    dy = [0,1,0,-1]
    # 카운트 값을 초기화한다.
    cnt = 0
    # 방향 값을 초기화한다.
    dir = 0
    x = 0
    y = 0
    # 가운트 값이 정사각형 배열의 크기보다 작을 때
    while cnt < size:
        # 만약 x가 0보다 크거나 같고 마지막 인덱스 보다 같거나 작고,
        # y가 0보다 크거나 같고 마지막 인덱스 보다 같거나 작고,
        # 해당 인덱스에 저장되어있는 값이 0일 때
        if 0 <= x <= N-1 and 0 <= y <= N-1 and arr[y][x] == 0:
            # 카운트 횟수를 1회 증가시키고
            cnt += 1
            # 해당 인덱스에 카운트에 저장되어있는 숫자만큼 저장시킨다.
            arr[y][x] = cnt
        # 행과 열이 범위를 초과하거나 해당 인덱스에 저장되어있는 값이 0이 아닐 때
        else:
            # 현재 저장되어있는 dir방향으로 한칸 뒤로이동한다.
            x -= dx[dir]
            y -= dy[dir]
            # 저장되어있는 다음 방향으로 방향을 튼다
            dir = (dir + 1)%4

        # 현재 저장되어있는 dir방향으로 한칸 이동한다
        x += dx[dir]
        y += dy[dir]
    # 테스트케이스 차수를 출력한다.
    print(f'#{tc}')
    # 해당 리스트를 순회하면서 Asterisk를 사용하여 컨테이너 타입의 데이터를 언패킹한다.
    for i in arr:
        print(*i)