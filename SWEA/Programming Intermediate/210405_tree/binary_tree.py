# 이진트리를 배열에 저장하기
# 이진트리의 특징
# 각 자식 노드들이 부모노드의 영향을 받는다.
# 왼쪽 자식노드의 번호 : 부모노드번호 * 2
# 온쪽 자식노드의 번호 : 부모노드번호*2 + 1
# 높이가 H인 이진트리의 최대 노드의 개수 : 2^(h+1) - 1개
# 1 2 1 3 2 4 2 5 3 6 3 7 4 8 4 9 5 10
# 높이는 3이라고 가정
H = 3
# 최대노드의 개수는 2^(H-1) - 1개 이지만
# 노드의 번호를 인덱스로 사용하기 때문에 2^(H+1)개 만큼 공간 확보(1번 인덱스 부터 사용)
tree = [-1]*(pow(2, H+1))
# data의 idx: 노드의 번호
# data[idx] : 노드의 value
data = [-1,"A","B","C","D","E","F","G","H","I","J"]
# data를 읽어서 연결정보에 맞게 tree에 넣어보자.
for i in range(1, len(data)):
# 트리 정보 읽어서 tree 배열에 넣어주기
# 트리 정보 읽어오기
data = list(map(int(1, 2, 1, 3, 2, 4, 2, 5, 3, 6, 3, 7, 4, 8, 4, 9, 5, 10)))
for i in range(0,len(str),2):
    # data[i]: 부모 노드의 번호
    # data[i+1]: 자식 노드의 번호
    tree[data[i]] = data[i]
    tree[data[i+1]] = data[i+1]
    tree[parent] =