def isometric_sequence(n):
    # 초깃값 설정
    count = 0
    # 입력받은 값이 세자리 미만일 떄
    if int(n) < 100:
        return n
    # 입력받은 값이 세자리일 때
    elif 100 <= int(n) < 1000:
        # 세자리 미만까지는 전부 등차수열이므로 99를 더하고 시작한다.
        count += 99
        # 세자리부터 시작하기 때문에 반복문 시작을 100부터 했다.
        for j in range(100,int(n)+1):
            # 100의 자리수, 10의 자리수, 1의 자리수를 lst에 순서대로 입력한다.
            # j//100 : 입력받은 세자리 수의 100의 자리수
            # (j//10)%10 : 입력받은 세자리 수의 10의 자리수
            # j%10 : 입력받은 세자리 수의 1의 자리수
            lst = [j//100, (j//10)%10 ,j%10]
            # 등차수열이라면 count값을 1 증가시킨다.
            if lst[2]-lst[1] == lst[1]-lst[0]:
                count += 1
        # count값 반환
        return count
    # 입력값이 네자리인경우는 1000밖에 없으므로 바로 144를 반환해주도록 한다.
    elif int(n) == 1000:
        return 144

T = input()
# 함수카드 발동!!!!!!!!!!!!!!!!!!!!!!
print(isometric_sequence(T))


